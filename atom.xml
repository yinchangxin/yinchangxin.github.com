<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Charls Yin Blog]]></title>
  <link href="http://YinChangXin.github.io/atom.xml" rel="self"/>
  <link href="http://YinChangXin.github.io/"/>
  <updated>2014-01-22T16:35:06+08:00</updated>
  <id>http://YinChangXin.github.io/</id>
  <author>
    <name><![CDATA[Yin Changxin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[scss 安装使用]]></title>
    <link href="http://YinChangXin.github.io/blog/2014/01/22/scss-an-zhuang-shi-yong/"/>
    <updated>2014-01-22T16:32:41+08:00</updated>
    <id>http://YinChangXin.github.io/blog/2014/01/22/scss-an-zhuang-shi-yong</id>
    <content type="html"><![CDATA[<p>2.1 安装
SASS是Ruby语言写的，但是两者的语法没有关系。不懂Ruby，照样使用。只是必须先安装Ruby，然后再安装SASS。
假定你已经安装好了Ruby，接着在命令行输入下面的命令：
　　gem install sass
然后，就可以使用了。
2.2 使用
SASS文件就是普通的文本文件，里面可以直接使用CSS语法。文件后缀名是.scss，意思为Sassy CSS。
下面的命令，可以在屏幕上显示.scss文件转化的css代码。（假设文件名为test。）
　　sass test.scss
如果要将显示结果保存成文件，后面再跟一个.css文件名。
　　sass test.scss test.css
SASS提供四个编译风格的选项：
　　<em> nested：嵌套缩进的css代码，它是默认值。
　　</em> expanded：没有缩进的、扩展的css代码。
　　<em> compact：简洁格式的css代码。
　　</em> compressed：压缩后的css代码。
生产环境当中，一般使用最后一个选项。
　　sass &mdash;style compressed test.sass test.css
你也可以让SASS监听某个文件或目录，一旦源文件有变动，就自动生成编译后的版本。
　　// watch a file
　　sass &mdash;watch input.scss:output.css
　　// watch a directory
　　sass &mdash;watch app/sass:public/stylesheets
SASS的官方网站，提供了一个在线转换器。你可以在那里，试运行下面的各种例子。
三、基本用法
3.1 变量
SASS允许使用变量，所有变量以$开头。
　　$blue : #1875e7;　
　　div {
　　　color : $blue;
　　}
如果变量需要镶嵌在字符串之中，就必须需要写在#{}之中。
　　$side : left;
　　.rounded {
　　　　border-#{$side}-radius: 5px;
　　}
3.2 计算功能
SASS允许在代码中使用算式：
　　body {
　　　　margin: (14px/2);
　　　　top: 50px + 100px;
　　　　right: $var * 10%;
　　}
3.3 嵌套
SASS允许选择器嵌套。比如，下面的CSS代码：
　　div h1 {
　　　　color : red;
　　}
可以写成：
　　div {
　　　　hi {
　　　　　　color:red;
　　　　}
　　}
属性也可以嵌套，比如border-color属性，可以写成：
　　p {
　　　　border: {
　　　　　　color: red;
　　　　}
　　}
注意，border后面必须加上冒号。
在嵌套的代码块内，可以使用$引用父元素。比如a:hover伪类，可以写成：
　　a {
　　　　&amp;:hover { color: #ffb3ff; }
　　}
3.4 注释
SASS共有两种注释风格。
标准的CSS注释 /<em> comment </em>/ ，会保留到编译后的文件。
单行注释 // comment，只保留在SASS源文件中，编译后被省略。
在/<em>后面加一个感叹号，表示这是&#8221;重要注释&#8221;。即使是压缩模式编译，也会保留这行注释，通常可以用于声明版权信息。
　　/</em>!
　　　　重要注释！
　　*/
四、代码的重用
4.1 继承
SASS允许一个选择器，继承另一个选择器。比如，现有class1：
　　.class1 {
　　　　border: 1px solid #ddd;
　　}
class2要继承class1，就要使用@extend命令：
　　.class2 {
　　　　@extend .class1;
　　　　font-size:120%;
　　}
4.2 Mixin
Mixin有点像C语言的宏（macro），是可以重用的代码块。
使用@mixin命令，定义一个代码块。
　　@mixin left {
　　　　float: left;
　　　　margin-left: 10px;
　　}
使用@include命令，调用这个mixin。
　　div {
　　　　@include left;
　　}
mixin的强大之处，在于可以指定参数和缺省值。
　　@mixin left($value: 10px) {
　　　　float: left;
　　　　margin-right: $value;
　　}
使用的时候，根据需要加入参数：
　　div {
　　　　@include left(20px);
　　}
下面是一个mixin的实例，用来生成浏览器前缀。
　　@mixin rounded($vert, $horz, $radius: 10px) {
　　　　border-#{$vert}&ndash;#{$horz}-radius: $radius;
　　　　-moz-border-radius-#{$vert}#{$horz}: $radius;
　　　　-webkit-border-#{$vert}&ndash;#{$horz}-radius: $radius;
　　}
使用的时候，可以像下面这样调用：
　　#navbar li { @include rounded(top, left); }
　　#footer { @include rounded(top, left, 5px); }
4.3 颜色函数
SASS提供了一些内置的颜色函数，以便生成系列颜色。
　　lighten(#cc3, 10%) // #d6d65c
　　darken(#cc3, 10%) // #a3a329
　　grayscale(#cc3) // #808080
　　complement(#cc3) // #33c
4.4 插入文件
@import命令，用来插入外部文件。
　　@import &ldquo;path/filename.scss&rdquo;;
如果插入的是.css文件，则等同于css的import命令。
　　@import &ldquo;foo.css&rdquo;;
高级用法</p>

<h3>条件语句</h3>

<p>@if可以用来判断：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">　　</span><span class="nb">p</span> <span class="p">{</span>
</span><span class='line'><span class="err">　　　　</span><span class="vi">@if</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">==</span> <span class="mi">2</span> <span class="p">{</span> <span class="ss">border</span><span class="p">:</span> <span class="mi">1</span><span class="n">px</span> <span class="n">solid</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="err">　　　　</span><span class="vi">@if</span> <span class="mi">5</span> <span class="o">&lt;</span> <span class="mi">3</span> <span class="p">{</span> <span class="ss">border</span><span class="p">:</span> <span class="mi">2</span><span class="n">px</span> <span class="n">dotted</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="err">　　</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>配套的还有@else命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">　　</span><span class="vi">@if</span> <span class="n">lightness</span><span class="p">(</span><span class="vg">$color</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">30</span><span class="o">%</span> <span class="p">{</span>
</span><span class='line'><span class="err">　　　　</span><span class="n">background</span><span class="o">-</span><span class="ss">color</span><span class="p">:</span> <span class="c1">#000;</span>
</span><span class='line'><span class="err">　　</span><span class="p">}</span> <span class="vi">@else</span> <span class="p">{</span>
</span><span class='line'><span class="err">　　　　</span><span class="n">background</span><span class="o">-</span><span class="ss">color</span><span class="p">:</span> <span class="c1">#fff;</span>
</span><span class='line'><span class="err">　　</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>循环语句</h3>

<p>SASS支持for循环：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">　　</span><span class="vi">@for</span> <span class="vg">$i</span> <span class="n">from</span> <span class="mi">1</span> <span class="n">to</span> <span class="mi">10</span> <span class="p">{</span>
</span><span class='line'><span class="err">　　　　</span><span class="o">.</span><span class="n">border</span><span class="o">-</span><span class="c1">#{$i} {</span>
</span><span class='line'><span class="err">　　　　　　</span><span class="ss">border</span><span class="p">:</span> <span class="c1">#{$i}px solid blue;</span>
</span><span class='line'><span class="err">　　　　</span><span class="p">}</span>
</span><span class='line'><span class="err">　　</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>也支持while循环：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">　　</span><span class="vg">$i</span><span class="p">:</span> <span class="mi">6</span><span class="p">;</span>
</span><span class='line'><span class="err">　　</span><span class="vi">@while</span> <span class="vg">$i</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'><span class="err">　　　　</span><span class="o">.</span><span class="n">item</span><span class="o">-</span><span class="c1">#{$i} { width: 2em * $i; }</span>
</span><span class='line'><span class="err">　　　　</span><span class="vg">$i</span><span class="p">:</span> <span class="vg">$i</span> <span class="o">-</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="err">　　</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>each命令，作用与for类似：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">　　</span><span class="vi">@each</span> <span class="vg">$member</span> <span class="k">in</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">d</span> <span class="p">{</span>
</span><span class='line'><span class="err">　　　　</span><span class="o">.</span><span class="c1">#{$member} {</span>
</span><span class='line'><span class="err">　　　　　　</span><span class="n">background</span><span class="o">-</span><span class="ss">image</span><span class="p">:</span> <span class="n">url</span><span class="p">(</span><span class="s2">&quot;/image/</span><span class="si">#{</span><span class="vg">$member</span><span class="si">}</span><span class="s2">.jpg&quot;</span><span class="p">);</span>
</span><span class='line'><span class="err">　　　　</span><span class="p">}</span>
</span><span class='line'><span class="err">　　</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>自定义函数</h3>

<p>SASS允许用户编写自己的函数。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">　　</span><span class="vi">@function</span> <span class="n">double</span><span class="p">(</span><span class="vg">$n</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="err">　　　　</span><span class="vi">@return</span> <span class="vg">$n</span> <span class="o">*</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="err">　　</span><span class="p">}</span>
</span><span class='line'><span class="err">　　</span><span class="c1">#sidebar {</span>
</span><span class='line'><span class="err">　　　　</span><span class="ss">width</span><span class="p">:</span> <span class="n">double</span><span class="p">(</span><span class="mi">5</span><span class="n">px</span><span class="p">);</span>
</span><span class='line'><span class="err">　　</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JsTree jquery plugin]]></title>
    <link href="http://YinChangXin.github.io/blog/2014/01/21/jstree-jquery-plugin/"/>
    <updated>2014-01-21T10:02:02+08:00</updated>
    <id>http://YinChangXin.github.io/blog/2014/01/21/jstree-jquery-plugin</id>
    <content type="html"><![CDATA[<p>Github Address: [<a href="https://github.com/vakata/jstree">https://github.com/vakata/jstree</a>]</p>

<p><img src="https://trello-attachments.s3.amazonaws.com/52afdf9d1fe235873100813d/52afe030196671d33d007f90/5467a46a1d14d10768b6fd81b2d9b614/upload_2014-01-21_at_10.11.40_am.png" alt="preview" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make Any Ruby Object Feel Like ActiveRecord]]></title>
    <link href="http://YinChangXin.github.io/blog/2014/01/21/make-any-ruby-object-feel-like-activerecord/"/>
    <updated>2014-01-21T09:51:56+08:00</updated>
    <id>http://YinChangXin.github.io/blog/2014/01/21/make-any-ruby-object-feel-like-activerecord</id>
    <content type="html"><![CDATA[<p>Before I Begin, The ActiveModel API
Before I begin, there are two major elements to ActiveModel. The first is the ActiveModel API, the interface that models must adhere to in order to gain compatibility with ActionPack’s helpers. I’ll be talking more about that soon, but for now, the important thing about the ActiveModel API is that your models can become ActiveModel compliant without using a single line of Rails code.</p>

<p>In order to help you ensure that your models are compliant, ActiveModel comes with a module called ActiveModel::Lint that you can include into your test cases to test compliance with the API:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">LintTest</span> <span class="o">&lt;</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:TestCase</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Lint</span><span class="o">::</span><span class="no">Tests</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">CompliantModel</span>
</span><span class='line'>    <span class="kp">extend</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Naming</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">to_model</span>
</span><span class='line'>      <span class="nb">self</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">valid?</span><span class="p">()</span>      <span class="kp">true</span> <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">new_record?</span><span class="p">()</span> <span class="kp">true</span> <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">destroyed?</span><span class="p">()</span>  <span class="kp">true</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">errors</span>
</span><span class='line'>      <span class="n">obj</span> <span class="o">=</span> <span class="no">Object</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">obj</span><span class="o">.</span><span class="nf">[]</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>         <span class="o">[]</span> <span class="k">end</span>
</span><span class='line'>      <span class="k">def</span> <span class="nc">obj</span><span class="o">.</span><span class="nf">full_messages</span><span class="p">()</span> <span class="o">[]</span> <span class="k">end</span>
</span><span class='line'>      <span class="n">obj</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">setup</span>
</span><span class='line'>    <span class="vi">@model</span> <span class="o">=</span> <span class="no">CompliantModel</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The ActiveModel::Lint::Tests provide a series of tests that are run against the @model, testing for compliance.</p>

<h2>ActiveModel Modules</h2>

<p>The second interesting part of ActiveModel is a series of modules provided by ActiveModel that you can use to implement common model functionality on your own Ruby objects. These modules were extracted from ActiveRecord, and are now included in ActiveRecord.</p>

<p>Because we’re dogfooding these modules, you can be assured that APIs you bring in to your models will remain consistent with ActiveRecord, and that they’ll continue to be maintained in future releases of Rails.</p>

<p>The ActiveModel comes with internationalization baked in, providing an avenue for much better community sharing around translating error messages and the like.</p>

<h2>The Validations System</h2>

<p>This was perhaps the most frustrating coupling in ActiveRecord, because it meant that people writing libraries for, say, CouchDB had to choose between painstakingly copying the API over, allowing inconsistencies to creep in, or just inventing a whole new API.</p>

<p>Validations have a few different elements.</p>

<p>First, declaring the validations themselves. You’ve seen the usage before in ActiveRecord:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:first_name</span><span class="p">,</span> <span class="ss">:last_name</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>To do the same thing for a plain old Ruby object, simply do the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Validations</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:first_name</span><span class="p">,</span> <span class="ss">:last_name</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:first_name</span><span class="p">,</span> <span class="ss">:last_name</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">first_name</span><span class="p">,</span> <span class="n">last_name</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@first_name</span><span class="p">,</span> <span class="vi">@last_name</span> <span class="o">=</span> <span class="n">first_name</span><span class="p">,</span> <span class="n">last_name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails程序自启动]]></title>
    <link href="http://YinChangXin.github.io/blog/2014/01/19/railscheng-xu-zi-qi-dong/"/>
    <updated>2014-01-19T12:44:48+08:00</updated>
    <id>http://YinChangXin.github.io/blog/2014/01/19/railscheng-xu-zi-qi-dong</id>
    <content type="html"><![CDATA[<p>文件存储位置为/etc/init.d/<name>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#! /bin/sh</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#http://blog.kiskolabs.com/post/722322392/unicorn-init-scripts</span>
</span><span class='line'>
</span><span class='line'><span class="c1">### BEGIN INIT INFO</span>
</span><span class='line'><span class="c1"># Provides:          unicorn</span>
</span><span class='line'><span class="c1"># Required-Start:    $local_fs $remote_fs $network $syslog</span>
</span><span class='line'><span class="c1"># Required-Stop:     $local_fs $remote_fs $network $syslog</span>
</span><span class='line'><span class="c1"># Default-Start:     2 3 4 5</span>
</span><span class='line'><span class="c1"># Default-Stop:      0 1 6</span>
</span><span class='line'><span class="c1"># Short-Description: starts the unicorn web server</span>
</span><span class='line'><span class="c1"># Description:       starts unicorn</span>
</span><span class='line'><span class="c1">### END INIT INFO</span>
</span><span class='line'>
</span><span class='line'><span class="no">PATH</span><span class="o">=</span><span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="ss">sbin</span><span class="p">:</span><span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="ss">bin</span><span class="p">:</span><span class="sr">/sbin:/</span><span class="ss">bin</span><span class="p">:</span><span class="sr">/usr/s</span><span class="ss">bin</span><span class="p">:</span><span class="sr">/usr/</span><span class="n">bin</span>
</span><span class='line'><span class="no">DAEMON</span><span class="o">=</span><span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">unicorn_rails</span>
</span><span class='line'><span class="no">DAEMON_OPTS</span><span class="o">=</span><span class="s2">&quot;-c /home/wwwroot/matz.cn/config/unicorn.rb -E production -D&quot;</span>
</span><span class='line'><span class="no">NAME</span><span class="o">=</span><span class="n">unicorn_rails</span>
</span><span class='line'><span class="no">DESC</span><span class="o">=</span><span class="n">unicorn_rails</span>
</span><span class='line'><span class="no">PID</span><span class="o">=</span><span class="sr">/home/</span><span class="n">wwwroot</span><span class="o">/</span><span class="n">matz</span><span class="o">.</span><span class="n">cn</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">pids</span><span class="o">/</span><span class="n">unicorn</span><span class="o">.</span><span class="n">pid</span>
</span><span class='line'>
</span><span class='line'><span class="k">case</span> <span class="s2">&quot;$1&quot;</span> <span class="k">in</span>
</span><span class='line'>  <span class="n">start</span><span class="p">)</span>
</span><span class='line'>    <span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="s2">&quot;Starting $DESC: &quot;</span>
</span><span class='line'>    <span class="vg">$DAEMON</span> <span class="vg">$DAEMON_OPTS</span>
</span><span class='line'>    <span class="n">echo</span> <span class="s2">&quot;$NAME.&quot;</span>
</span><span class='line'>    <span class="p">;;</span>
</span><span class='line'>  <span class="n">stop</span><span class="p">)</span>
</span><span class='line'>    <span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="s2">&quot;Stopping $DESC: &quot;</span>
</span><span class='line'>        <span class="n">kill</span> <span class="o">-</span><span class="no">QUIT</span> <span class="sb">`cat $PID`</span>
</span><span class='line'>    <span class="n">echo</span> <span class="s2">&quot;$NAME.&quot;</span>
</span><span class='line'>    <span class="p">;;</span>
</span><span class='line'>  <span class="n">restart</span><span class="p">)</span>
</span><span class='line'>    <span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="s2">&quot;Restarting $DESC: &quot;</span>
</span><span class='line'>        <span class="n">kill</span> <span class="o">-</span><span class="no">QUIT</span> <span class="sb">`cat $PID`</span>
</span><span class='line'>    <span class="nb">sleep</span> <span class="mi">1</span>
</span><span class='line'>    <span class="vg">$DAEMON</span> <span class="vg">$DAEMON_OPTS</span>
</span><span class='line'>    <span class="n">echo</span> <span class="s2">&quot;$NAME.&quot;</span>
</span><span class='line'>    <span class="p">;;</span>
</span><span class='line'>  <span class="n">reload</span><span class="p">)</span>
</span><span class='line'>        <span class="n">echo</span> <span class="o">-</span><span class="n">n</span> <span class="s2">&quot;Reloading $DESC configuration: &quot;</span>
</span><span class='line'>        <span class="n">kill</span> <span class="o">-</span><span class="no">HUP</span> <span class="sb">`cat $PID`</span>
</span><span class='line'>        <span class="n">echo</span> <span class="s2">&quot;$NAME.&quot;</span>
</span><span class='line'>        <span class="p">;;</span>
</span><span class='line'>  <span class="o">*</span><span class="p">)</span>
</span><span class='line'>    <span class="n">echo</span> <span class="s2">&quot;Usage: $NAME {start|stop|restart|reload}&quot;</span> <span class="o">&gt;&amp;</span><span class="mi">2</span>
</span><span class='line'>    <span class="nb">exit</span> <span class="mi">1</span>
</span><span class='line'>    <span class="p">;;</span>
</span><span class='line'><span class="n">esac</span>
</span><span class='line'>
</span><span class='line'><span class="nb">exit</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过chkconfig命令添加自启动：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">chkconfig</span> <span class="o">--</span><span class="n">add</span> <span class="o">&lt;</span><span class="nb">name</span><span class="o">&gt;</span>
</span><span class='line'><span class="n">chkconfig</span> <span class="o">&lt;</span><span class="nb">name</span><span class="o">&gt;</span> <span class="n">on</span>
</span></code></pre></td></tr></table></div></figure>


<p>至此，重启系统后，该Rails程序用随系统启动。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 连接 Sql Server]]></title>
    <link href="http://YinChangXin.github.io/blog/2014/01/16/ruby-lian-jie-sql-server/"/>
    <updated>2014-01-16T09:24:32+08:00</updated>
    <id>http://YinChangXin.github.io/blog/2014/01/16/ruby-lian-jie-sql-server</id>
    <content type="html"><![CDATA[<p>因为工作需要，要分析存放在SQL Server上的数据，所以不得不研究一下如何使用Ruby访问SQL Server，发现其实还是很简单的：</p>

<p>== 安装FreeTDS ==</p>

<hr />

<ul>
<li>安装预要求的包：</li>
</ul>


<p>  <code>ruby
   aptitude install freetds-dev
 </code></p>

<ul>
<li> 3.安装Tiny_TDS
Tiny_TDS，安装和使用非常简单，推荐使用：</li>
</ul>


<p>  <code>ruby
  sudo gem install tiny_tds
 </code></p>

<p>  用[<a href="https://github.com/rails-sqlserver/tiny_tds">https://github.com/rails-sqlserver/tiny_tds</a>]访问SQL Server很简单：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;tiny_tds&#39;</span>
</span><span class='line'>  <span class="n">client</span> <span class="o">=</span> <span class="ss">TinyTds</span><span class="p">:</span><span class="ss">:Client</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:username</span> <span class="o">=&gt;</span> <span class="s1">&#39;fankai&#39;</span><span class="p">,</span> <span class="ss">:password</span> <span class="o">=&gt;</span> <span class="s1">&#39;fankai&#39;</span><span class="p">,</span> <span class="ss">:host</span> <span class="o">=&gt;</span> <span class="s1">&#39;192.168.0.1&#39;</span><span class="p">,</span> <span class="ss">:database</span> <span class="o">=&gt;</span> <span class="s1">&#39;test&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;select top 10 * from User&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">result</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">row</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">row</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>4.在ActiveRecord上使用Tiny_TDS
这也非常简单，
参考这个教程<a href="Using%20TinyTDS">https://github.com/rails-sqlserver/activerecord-sqlserver-adapter/wiki/Using-TinyTds</a>：</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">activerecord</span><span class="o">-</span><span class="n">sqlserver</span><span class="o">-</span><span class="n">adapter</span>
</span></code></pre></td></tr></table></div></figure>


<p>  配置database.yml如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="ss">development</span><span class="p">:</span>
</span><span class='line'>    <span class="ss">adapter</span><span class="p">:</span> <span class="n">sqlserver</span>
</span><span class='line'>    <span class="ss">host</span><span class="p">:</span> <span class="n">mydb</span><span class="o">.</span><span class="n">net</span>
</span><span class='line'>    <span class="ss">database</span><span class="p">:</span> <span class="n">myapp_development</span>
</span><span class='line'>    <span class="ss">username</span><span class="p">:</span> <span class="n">sa</span>
</span><span class='line'>    <span class="ss">password</span><span class="p">:</span> <span class="n">secret</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>原文见[<a href="http://robbinfan.com/blog/44/ruby-connect-sqlserver">http://robbinfan.com/blog/44/ruby-connect-sqlserver</a>]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装R]]></title>
    <link href="http://YinChangXin.github.io/blog/2014/01/16/an-zhuang-r/"/>
    <updated>2014-01-16T09:18:43+08:00</updated>
    <id>http://YinChangXin.github.io/blog/2014/01/16/an-zhuang-r</id>
    <content type="html"><![CDATA[<p>debian系统下，不建议使用编译安装方式进行安装，以避免无法生成png格式图片的错误，以下为debian系统使用aptitude安装R的过程</p>

<ul>
<li>添加R3以上版本的网络源</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">nano</span> <span class="o">-</span><span class="n">w</span> <span class="sr">/etc/</span><span class="n">apt</span><span class="o">/</span><span class="n">sources</span><span class="o">.</span><span class="n">list</span>
</span><span class='line'><span class="n">deb</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//mi</span><span class="n">rrors</span><span class="o">.</span><span class="n">ustc</span><span class="o">.</span><span class="n">edu</span><span class="o">.</span><span class="n">cn</span><span class="o">/</span><span class="no">CRAN</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">debian</span> <span class="n">squeeze</span><span class="o">-</span><span class="n">cran3</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>添加key
方式1：执行以下命令</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$　</span><span class="n">apt</span><span class="o">-</span><span class="n">key</span> <span class="n">adv</span> <span class="o">--</span><span class="n">keyserver</span> <span class="n">subkeys</span><span class="o">.</span><span class="n">pgp</span><span class="o">.</span><span class="n">net</span> <span class="o">--</span><span class="n">recv</span><span class="o">-</span><span class="n">key</span> <span class="mi">381</span><span class="no">BA480</span>
</span></code></pre></td></tr></table></div></figure>


<p>方式2：
 创建名为key的文本，文本内容如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-----</span><span class="k">BEGIN</span> <span class="no">PGP</span> <span class="no">PUBLIC</span> <span class="no">KEY</span> <span class="no">BLOCK</span><span class="o">-----</span>
</span><span class='line'><span class="ss">Version</span><span class="p">:</span> <span class="no">SKS</span> <span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="n">mQGiBEXUFiURBADkTqPqcRYdLIguhC6fnwTvIxdkoN1UEBuPR6NYW4iJzvRSas</span><span class="o">/</span><span class="n">g5bPo5ZxE</span>
</span><span class='line'><span class="mi">2</span><span class="n">i5BXiuVfYrSk</span><span class="o">/</span><span class="no">YiU</span><span class="o">+/</span><span class="n">lc0K6VYNDygbOfpBgGGhtfzYfFRTYNq8QsdD8L8BMYtOu5rYo5BYt</span>
</span><span class='line'><span class="n">a0vuantIS9mn9QnH7885uy5tX</span><span class="o">/</span><span class="no">TXO7ICYVHxnFNr2wCguNtMdz9</span><span class="o">+</span><span class="no">DRQ38n4iiHzTtj</span><span class="o">/</span><span class="mi">7</span><span class="no">UHsD</span>
</span><span class='line'><span class="sr">/0+0TLHHvY1FfakVinamR9oCm9uH9PmkGTy6jRnrvg5Z+TTgygiDdTBKPc1TqpFgoFtqh8G5</span>
</span><span class='line'><span class="sr">DpDPbyh5GzBj8Ky1mBJb3bMwy2RUth1cztHEWI36xuCl+KrLtA4OYuCwJJZhOWDIO9aO2LW5</span>
</span><span class='line'><span class="sr">kJhIwIuvSrEtOgTxpzy82g7eEzvLBADUrQ01fj+9VDrO2Vept8jtaGK+4kW3cBAG/</span><span class="no">UbOrTjt</span>
</span><span class='line'><span class="mi">63</span><span class="no">VurXwyvNb6q7hKFUaVH42Fc0e64F217mutCyftPWYJwY4SR8hUmjEM</span><span class="o">/</span><span class="no">SYcezUDWWvVxmkF</span>
</span><span class='line'><span class="mi">8</span><span class="no">M4rMhHa0j</span><span class="o">+</span><span class="n">q</span><span class="o">+</span><span class="n">et3mTKwgxehQO9hLUqRebnmJuwNqNJKb9izsPqmh83Zo7Q7Sm9oYW5uZXMg</span>
</span><span class='line'><span class="no">UmFua2UgKENSQU4gRGViaWFuIGFyY2hpdmUpIDxqcmFua2VAdW5pLWJyZW1lbi5kZT6IRgQQ</span>
</span><span class='line'><span class="no">EQIABgUCRdQ</span><span class="o">+</span><span class="n">nQAKCRAvD04U9kmvkJ3</span><span class="o">+</span><span class="no">AJ4xLMELB</span><span class="o">/</span><span class="n">fT1AwtR1azcH0lKg</span><span class="o">/</span><span class="no">TegCdEvtp3SUf</span>
</span><span class='line'><span class="n">aHP3Jvg2CkzTZOatfFuIRgQQEQIABgUCS4VoCgAKCRDvfNpxC67</span><span class="o">+</span><span class="mi">5</span><span class="no">ZFyAKCAzgPTqM6sSMhB</span>
</span><span class='line'><span class="n">iaZbNCpiVtwDrQCgjMy</span><span class="o">+</span><span class="n">iqPm7SVOCq0XJsCCbxymfB</span><span class="o">+</span><span class="no">IXgQTEQIAHgUCRdQWJQIbAwYLCQgH</span>
</span><span class='line'><span class="no">AwIDFQIDAxYCAQIeAQIXgAAKCRAG</span><span class="o">+</span><span class="no">Q3lOBukgM09AKCuapN6slttAFRjs2</span><span class="o">/</span><span class="n">mgtaMMwO9sgCf</span>
</span><span class='line'><span class="no">ZD2au39Oo8QLXZhZTipN8c7j9mM</span><span class="o">=</span>
</span><span class='line'><span class="o">=</span><span class="no">BRgm</span>
</span><span class='line'><span class="o">-----</span><span class="k">END</span> <span class="no">PGP</span> <span class="no">PUBLIC</span> <span class="no">KEY</span> <span class="no">BLOCK</span><span class="o">-----</span>
</span></code></pre></td></tr></table></div></figure>


<p>添加key</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">apt</span><span class="o">-</span><span class="n">key</span> <span class="n">add</span> <span class="n">key</span>
</span></code></pre></td></tr></table></div></figure>


<p> 更新源列表</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">aptitude</span> <span class="n">update</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>安装R</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">aptitude</span> <span class="n">install</span> <span class="n">r</span><span class="o">-</span><span class="n">base</span> <span class="n">r</span><span class="o">-</span><span class="n">base</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Erlang]]></title>
    <link href="http://YinChangXin.github.io/blog/2014/01/16/install-erlang/"/>
    <updated>2014-01-16T08:28:47+08:00</updated>
    <id>http://YinChangXin.github.io/blog/2014/01/16/install-erlang</id>
    <content type="html"><![CDATA[<h3>Erlang依赖哪些库</h3>

<ul>
<li>A fully working GCC compiler environment</li>
<li>Ncurses development libraries</li>
<li>OpenSSL development libraries</li>
</ul>


<p>安装了这些库之后，必须要重新执行configure命令，configure之后会有提示哪些依赖的库没有安装，可以根据你的需要放弃安装一些库；上面的操作可以使用下面的命令实现：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">wget</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">www</span><span class="o">.</span><span class="n">erlang</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">download</span><span class="o">/</span><span class="n">otp_src_R13B04</span><span class="o">.</span><span class="n">tar</span><span class="o">.</span><span class="n">gz</span>
</span><span class='line'>  <span class="n">tar</span> <span class="n">xfvz</span> <span class="n">otp_src_R13B04</span><span class="o">.</span><span class="n">tar</span><span class="o">.</span><span class="n">gz</span>
</span><span class='line'>  <span class="n">cd</span> <span class="n">otp_src_R13B04</span><span class="o">/</span>
</span><span class='line'>  <span class="o">.</span><span class="n">/configure</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">ssl</span>
</span><span class='line'>  <span class="n">sudo</span> <span class="n">make</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
